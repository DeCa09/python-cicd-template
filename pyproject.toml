[tool.poetry]
name = "addition_package"
version = "0.1.0"
description = ""
authors = ["Demir Catovic <d.catovic9@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
coverage = "^7.0.5"
nox = "^2022.11.21"
mypy = "^0.991"
black = "^22.12.0"
pytest-mock = "^3.10.0"
isort = "^5.12.0"
ruff = "^0.0.246"
codecov = "^2.1.12"


[tool.poetry.group.formatting.dependencies]
black = "^22.12.0"
isort = "^5.12.0"


[tool.poetry.group.static_type_checking.dependencies]
mypy = "^0.991"


[tool.poetry.group.testing.dependencies]
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"


[tool.poetry.group.linting.dependencies]
ruff = "^0.0.246"


[tool.black]
target-version = ["py311"]


[tool.isort]
profile = "black"


[tool.mypy]
strict = true


[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true


[tool.pytest.ini_options]
minversion = 7.0
addopts = "--cov"


[tool.coverage.paths]
source = ["src", "*/site-packages"]


[tool.coverage.run]
branch = true
source = ["addition_package"]


[tool.coverage.report]
show_missing = true
fail_under = 100


[tool.ruff]
select = [
    "E",  # pycodestyle errors - pep8 style check
    "W",  # pycodestyle warnings - pep8 style check
    "F",  # pyflakes - only errors, no style check
    "S",  # flake8-bandit - static security check
    "C",  # flake8-comprehensions - checks list/set/dict comprehensions
    "B",  # flake8-bugbear - checks common bugs
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # mccabe code complexity analysis, not useful
    "S101",  # use of "assert" flagged by bandit, needed for tests
]
target-version = "py311"
